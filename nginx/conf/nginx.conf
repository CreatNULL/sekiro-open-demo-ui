events {
    worker_connections  1024;
}

http{
upstream sekiro_business_netty {	# sekiro_business_netty 和下面的 pass 后面的值对应
  # sekiro 项目 地址
  server 127.0.0.1:5612;
}

server {
		listen		 80;
        listen       443 default  ssl;  # 监听433端口
        keepalive_timeout 100;  # 开启keepalive 激活keepalive长连接，减少客户端请求次数

        ssl_certificate      ./ssl/server.crt;   # server端证书位置
        ssl_certificate_key  ./ssl/server.key;   # server端私钥位置

        ssl_session_cache    shared:SSL:10m;         # 缓存session会话
        ssl_session_timeout  10m;                    # session会话    10分钟过期

        ssl_ciphers  HIGH:!aNULL:!MD5;	# 定义了支持的 SSL 加密算法套件，这里选择了较高安全性的算法，并排除了一些不安全的算法（如 MD5 ）。
        ssl_prefer_server_ciphers  on;	# 表示在选择加密算法时，优先使用服务器支持的算法。

        server_name ~^.*sekiro.*$;		# 但凡包含了 sekiro 字符串的域名
		server_name *.com;
		server_name *.cn;
		server_name *.top;
		server_name *.gov;
		server_name *.org;
		server_name *.edu;
		server_name *.net;
		server_name *.vip;
		server_name *.tech;
		server_name *.xyz;
		server_name *.vip ;
		server_name *.biz;
		server_name *.info;
		server_name *.mobi;
		server_name *.cc;
		server_name *.co;
		server_name *.video;
		server_name *.site;
		server_name *.host;
		server_name *.store;
		server_name *.team;
		server_name *.plus;
		server_name *.host;
		server_name *.club;
		server_name *.icu;
		server_name *.cloud;
		server_name *.band;
		server_name *.fans;
		server_name *.group;
		server_name *.live;
		server_name *.space;
		server_name *.work;
		server_name *.zone;
		server_name *.games;
		server_name *.asia;
		server_name *.pro;
        charset utf-8;				# 设置响应的字符编码为 UTF-8 。

        location /business-demo {    # 后续获取加密参数时候用到的路由
          gzip on;						# 启用 Gzip 压缩
          gzip_min_length 1k;			# 只有当响应内容长度大于 1KB 时才进行压缩
          gzip_buffers 4 16k;			# 设置用于压缩的缓冲区数量和大小。
          gzip_http_version 1.0;		# 对 HTTP 1.0 的响应也进行压缩
          gzip_comp_level 2;			# 设置压缩级别为 2（1 到 9 之间，数字越大压缩程度越高，但处理时间也越长）。
          gzip_types application/json text/plain application/x-javascript text/css application/xml;	# 指定对这些类型的内容进行压缩。
          gzip_vary on;					# 响应头中添加 Vary: Accept-Encoding,以便客户端根据自身是否支持压缩来正确处理响应。
          proxy_read_timeout      500;	# 设置从后端服务器读取响应的超时时间为 500 秒。
          proxy_connect_timeout   300;	# 设置与后端服务器建立连接的超时时间为 300 秒。
          proxy_redirect          off;	# 禁止 Nginx 自动处理后端服务器的重定向。

          proxy_http_version 1.1;												# 设置代理使用的 HTTP 版本为 1.1 。
          proxy_set_header    Upgrade $http_upgrade;							# 将请求头中的 Upgrade 值设置为客户端发送的 $http_upgrade 的值。
          proxy_set_header    Host                $http_host;					# 将请求头中的 Host 设置为客户端发送的 $http_host 的值。
          proxy_set_header    X-Real-IP           $remote_addr;					# 将客户端的真实 IP 地址（$remote_addr）设置到 X-Real-IP 请求头中。
          proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;	# 构建 X-Forwarded-For 请求头，包含客户端和各级代理的 IP 地址。
          proxy_set_header    X-Forwarded-Proto   $scheme;						# 将请求的协议（http 或 https ）设置到 X-Forwarded-Proto 请求头中。

          proxy_pass http://sekiro_business_netty;								# 将匹配到 /business-demo 路径的请求转发到后端的 http://sekiro_business_netty 服务。
        }

        location /register { # 开头的请求路径的规则。      # 后续页面或者手机进行wss连接用到的路由
          proxy_http_version 1.1;					    # 设置代理使用的 HTTP 版本为 1.1
          proxy_set_header Upgrade $http_upgrade;		# 将请求头中的 Upgrade 值设置为客户端发送的 $http_upgrade 的值。这通常用于支持 WebSocket 协议的升级
          proxy_set_header Connection "Upgrade";		# 将 Connection 请求头设置为 Upgrade ，以表明支持协议升级。
          proxy_set_header X-Real-IP $remote_addr;		# 将客户端的真实 IP 地址（$remote_addr）设置到 X-Real-IP 请求头中。

          proxy_pass http://sekiro_business_netty;		# 将匹配到 /register 路径的请求转发到上面 upstream 同名 指定的服务器。
        }

        location / {									# 表示匹配所有的请求路径。
          client_max_body_size 0;						# 设置客户端请求主体的大小限制为无限制。
          proxy_read_timeout      300;					# 设置从后端服务器读取响应的超时时间为 300 秒。
          proxy_connect_timeout   300;					# 设置与后端服务器建立连接的超时时间为 300 秒。
          proxy_redirect          off;					# 禁止 Nginx 自动处理后端服务器的重定向
          proxy_http_version 1.1;						# 设置代理使用的 HTTP 版本为 1.1 。
          proxy_set_header    Host                $http_host;					# 将请求头中的 Host 设置为客户端发送的 $http_host 的值。
          proxy_set_header    X-Real-IP           $remote_addr;					# 将客户端的真实 IP 地址（$remote_addr）设置到 X-Real-IP 请求头中。
          proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;	# 构建 X-Forwarded-For 请求头，包含客户端和各级代理的 IP 地址。
          proxy_set_header    X-Forwarded-Proto   $scheme;						# 将请求的协议（http 或 https ）设置到 X-Forwarded-Proto 请求头中。

          proxy_pass http://sekiro_business_netty;
        }
    }
}

